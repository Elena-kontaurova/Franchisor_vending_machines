import subprocess
import os
from collections import defaultdict


def get_git_contributions(repo_path, author_name):
    """–ü–æ–ª—É—á–∞–µ—Ç —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –ø–æ –∫–æ–º–º–∏—Ç–∞–º —É–∫–∞–∑–∞–Ω–Ω–æ–≥–æ –∞–≤—Ç–æ—Ä–∞"""
    os.chdir(repo_path)

    # –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ –∫–æ–º–º–∏—Ç—ã –∞–≤—Ç–æ—Ä–∞
    commits = subprocess.check_output(
        ['git', 'log', '--author=' + author_name, '--pretty=%H'],
        text=True
    ).splitlines()

    # –°–æ–±–∏—Ä–∞–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –ø–æ —Ñ–∞–π–ª–∞–º
    file_stats = defaultdict(lambda: {'added': 0, 'removed': 0})
    total_added = 0
    total_removed = 0

    for commit in commits:
        # –ü–æ–ª—É—á–∞–µ–º –∏–∑–º–µ–Ω–µ–Ω–∏—è –¥–ª—è –∫–∞–∂–¥–æ–≥–æ –∫–æ–º–º–∏—Ç–∞
        diff = subprocess.check_output(
            ['git', 'show', '--numstat', '--pretty=', commit],
            text=True
        )

        # –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –∏–∑–º–µ–Ω–µ–Ω–∏—è
        for line in diff.split('\n'):
            if not line or '\t' not in line:
                continue

            added, removed, filename = line.split('\t', 2)

            # –ü—Ä–æ–ø—É—Å–∫–∞–µ–º –ø–µ—Ä–µ–∏–º–µ–Ω–æ–≤–∞–Ω–∏—è
            if added == '-' and removed == '-':
                continue

            try:
                added = int(added) if added.isdigit() else 0
                removed = int(removed) if removed.isdigit() else 0

                file_stats[filename]['added'] += added
                file_stats[filename]['removed'] += removed
                total_added += added
                total_removed += removed
            except ValueError:
                continue

    return {
        'file_stats': dict(file_stats),
        'total_added': total_added,
        'total_removed': total_removed,
        'net_lines': total_added - total_removed,
        'commit_count': len(commits)
    }


if __name__ == "__main__":
    # –£–∫–∞–∂–∏—Ç–µ –ø—É—Ç—å –∫ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—é
    repo_path = r"C:\Users\Home\Desktop\franchisor_vending_machines"

    # –£–∫–∞–∂–∏—Ç–µ –≤–∞—à–µ –∏–º—è/email –≤ Git
    # (—Ç–æ, —á—Ç–æ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –≤ –∫–æ–º–º–∏—Ç–∞—Ö)
    your_git_author = "kontaurova0306@gmail.com"  # –ó–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ –≤–∞—à–µ –∏–º—è

    if not os.path.exists(repo_path):
        print(f"‚ùå –†–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π '{repo_path}' –Ω–µ –Ω–∞–π–¥–µ–Ω!")
        exit(1)

    print("\n" + "="*50)
    print(f"üîÑ –ê–Ω–∞–ª–∏–∑ –∫–æ–º–º–∏—Ç–æ–≤ –∞–≤—Ç–æ—Ä–∞ '{your_git_author}'...")
    print("="*50 + "\n")

    stats = get_git_contributions(repo_path, your_git_author)

    print("–û–±—â–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞")
    print(f"‚Ä¢ –í—Å–µ–≥–æ –∫–æ–º–º–∏—Ç–æ–≤: {stats['commit_count']}")
    print(f"‚Ä¢ –î–æ–±–∞–≤–ª–µ–Ω–æ —Å—Ç—Ä–æ–∫: {stats['total_added']}")
    print(f"‚Ä¢ –£–¥–∞–ª–µ–Ω–æ —Å—Ç—Ä–æ–∫: {stats['total_removed']}")
    print(f"‚Ä¢ –†–µ–∑—É–ª—å—Ç–∞—Ç (–¥–æ–±–∞–≤–ª–µ–Ω–æ –º–∏–Ω—É—Å —É–¥–∞–ª–µ–Ω–æ): {stats['net_lines']}")

    print("\nüîç –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ —Ñ–∞–π–ª–∞–º:")
    for filename, changes in stats['file_stats'].items():
        print(f"‚ñ∏ {filename}: +{changes['added']}/-{changes['removed']} \
              (–∏—Ç–æ–≥–æ: {changes['added'] - changes['removed']})")

    print("\n" + "="*50)
